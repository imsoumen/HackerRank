Print in Reverse
-------------------------------------
Link: https://www.hackerrank.com/contests/wissen-coding-challenge-2021/challenges/print-the-elements-of-a-linked-list-in-reverse
-------------------------------------

Given a pointer to the head of a singly-linked list, print each data value from the reversed list. If the given list is empty, do not print anything.

Example

head* refers to the linked list with data values 1 -> 2 -> 3 -> NULL

Print the following:
3
2
1

Function Description

Complete the reversePrint function in the editor below.

reversePrint has the following parameters:

SinglyLinkedListNode pointer head: a reference to the head of the list

Prints

The data values of each node in the reversed list.

Input Format

The first line of input contains t, the number of test cases.

The input of each test case is as follows:

The first line contains an integer n, the number of elements in the list.
Each of the next n lines contains a data element for a list node.

Sample Input
3
5
16
12
4
2
5
3
7
3
9
5
5
1
18
3
13

Sample Output
5
2
4
12
16
9
3
7
13
3
18
1
5

Explanation
There are three test cases. There are no blank lines between test case output.

The first linked list has 5 elements: 16 -> 12 -> 4 -> 2 -> 5. Printing this in reverse order produces:
5
2
4
12
16

The second linked list has 3 elements: 7 -> 3 -> 9 -> NULL. Printing this in reverse order produces:
9
3
7

The third linked list has 5 elements: 5 -> 1 -> 18 -> 3 -> 13 -> NULL. Printing this in reverse order produces:
13
3
18
1
5

(Scala Solution)

def reversePrint(llist: SinglyLinkedListNode) {
        if(llist == null) return 
        reversePrint(llist.next)
        println(llist.data)

    }